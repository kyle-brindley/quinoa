// *****************************************************************************
/*!
  \file      src/Main/QuinoaConfig.cpp
  \copyright 2012-2015 J. Bakosi,
             2016-2018 Los Alamos National Security, LLC.,
             2019-2021 Triad National Security, LLC.
             All rights reserved. See the LICENSE file for details.
  \brief     Quinoa configuration imported from cmake
  \details   Quinoa configuration inported from cmake.
  \see       src/CMakeListst.txt
*/
// *****************************************************************************

#include <string>

#include "QuinoaConfig.hpp"

namespace tk {

#define UNITTEST_EXECUTABLE          "@UNITTEST_EXECUTABLE@"
#define INCITER_EXECUTABLE           "@INCITER_EXECUTABLE@"
#define MESHCONV_EXECUTABLE          "@MESHCONV_EXECUTABLE@"

#define QUINOA_VERSION               "@MAJOR_VER@.@MINOR_VER@ (O@LACC@)"
#define COPYRIGHT                    "@COPYRIGHT@"
#define LICENSE                      "@LICENSE@"
#define GIT_COMMIT                   "@GIT_SHA1@"
#define MPI_COMPILER                 "@MPI_COMPILER@"
#define COMPILER                     "@COMPILER@"
#define BUILD_HOSTNAME               "@HOSTNAME@"
#define BUILD_TYPE                   "@BUILD_TYPE@"
#define BUILD_DATE                   "@BUILD_DATE@"
#define REGRESSION_DIR               "@REGRESSION_DIR@"

// Accessor definitions as strings of configuration values imported from cmake

std::string unittest_executable() { return UNITTEST_EXECUTABLE; }
std::string inciter_executable() { return INCITER_EXECUTABLE; }
std::string meshconv_executable() { return MESHCONV_EXECUTABLE; }

std::string quinoa_version() { return QUINOA_VERSION; }
std::string git_commit() { return GIT_COMMIT; }
std::string copyright() { return COPYRIGHT; }
std::string license() { return LICENSE; }
std::string mpi_compiler() { return MPI_COMPILER; }
std::string compiler() { return COMPILER; }
std::string build_hostname() { return BUILD_HOSTNAME; }
std::string build_type() { return BUILD_TYPE; }
std::string build_date() { return BUILD_DATE; }
std::string regression_dir() { return REGRESSION_DIR; }

} // tk::
